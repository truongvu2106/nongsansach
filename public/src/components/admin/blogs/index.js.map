{"version":3,"sources":["components/admin/blogs/index.ts"],"names":[],"mappings":";;;;;;;;;;AAAA,qBAA6C,eAAe,CAAC,CAAA;AAC7D,uBAAuC,iBAAiB,CAAC,CAAA;AACzD,qBAA4B,wBAAwB,CAAC,CAAA;AAQrD;IAII,yBAAoB,WAAwB,EAAU,KAAqB,EAC/D,MAAc;QADN,gBAAW,GAAX,WAAW,CAAa;QAAU,UAAK,GAAL,KAAK,CAAgB;QAC/D,WAAM,GAAN,MAAM,CAAQ;QAJ1B,UAAK,GAAG,EAAE,CAAC;QACX,WAAM,GAAW,EAAE,CAAC;QAIhB,OAAO,CAAC,IAAI,CAAC,iDAAiD,CAAC,CAAC;IACpE,CAAC;IAED,kCAAQ,GAAR;QACI,IAAI,IAAI,GAAG,IAAI,CAAC;QAChB,IAAI,CAAC,WAAW,CAAC,QAAQ,EAAE;aACtB,IAAI,CAAC,UAAC,KAAK;YACR,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;QACvB,CAAC,CAAC;aACD,KAAK,CAAC,UAAC,GAAG,IAAO,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IACjD,CAAC;IAED,gCAAM,GAAN,UAAO,EAAE;QACL,IAAI,IAAI,GAAG,IAAI,CAAC;QAChB,IAAI,CAAC,WAAW,CAAC,UAAU,CAAC,EAAE,CAAC;aAC1B,IAAI,CAAC;YACF,MAAM,CAAC,IAAI,CAAC,WAAW,CAAC,QAAQ,EAAE,CAAC;QACvC,CAAC,CAAC,CAAC,IAAI,CAAC,UAAS,KAAK;YAClB,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;QACvB,CAAC,CAAC,CAAC,KAAK,CAAC,UAAS,GAAG;YACjB,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;QACvB,CAAC,CAAC,CAAC;IACX,CAAC;IAlCL;QAAC,gBAAS,CAAC;YACP,QAAQ,EAAE,iBAAiB;YAC3B,WAAW,EAAE,uCAAuC;YACpD,SAAS,EAAE,CAAE,kBAAW,CAAE;SAC7B,CAAC;;uBAAA;IA+BF,sBAAC;AAAD,CA7BA,AA6BC,IAAA;AA7BY,uBAAe,kBA6B3B,CAAA","file":"index.js","sourcesContent":["import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { BlogService } from '../../../services/blog';\n\n@Component({\n    selector: 'blog-management',\n    templateUrl: 'src/components/admin/blogs/index.html',\n    providers: [ BlogService ]\n})\n\nexport class BlogsManagement implements OnInit {\n    blogs = [];\n    action: string = '';\n    private sub: any;\n    constructor(private blogService: BlogService, private route: ActivatedRoute,\n        private router: Router) {\n        console.info('Blogs Management Component Mounted Successfully');\n    }\n\n    ngOnInit() {\n        var self = this;\n        self.blogService.getBlogs()\n            .then((blogs) => {\n                self.blogs = blogs;\n            })\n            .catch((err) => { console.error(err); });\n    }\n\n    delete(id) {\n        var self = this;\n        self.blogService.deleteBlog(id)\n            .then(function() {\n                return self.blogService.getBlogs();\n            }).then(function(blogs) {\n                self.blogs = blogs;\n            }).catch(function(err) {\n                console.error(err);\n            });\n    }\n}\n"]}
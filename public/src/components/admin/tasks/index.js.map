{"version":3,"sources":["components/admin/tasks/index.ts"],"names":[],"mappings":";;;;;;;;;;AAAA,qBAAkC,eAAe,CAAC,CAAA;AAClD,sBAA6B,yBAAyB,CAAC,CAAA;AACvD,IAAY,CAAC,WAAM,QAAQ,CAAC,CAAA;AAS5B;IAGI,eAAoB,YAA0B;QAA1B,iBAAY,GAAZ,YAAY,CAAc;QAD9C,iBAAY,GAAQ,EAAE,CAAC;IAC0B,CAAC;IAElD,wBAAQ,GAAR;QACI,IAAI,CAAC,QAAQ,EAAE,CAAC;IACpB,CAAC;IAED,wBAAQ,GAAR;QAAA,iBAGC;QAFG,IAAI,CAAC,YAAY,CAAC,QAAQ,EAAE;aACvB,IAAI,CAAC,UAAC,KAAK,IAAO,KAAI,CAAC,KAAK,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;IAClD,CAAC;IAED,wBAAQ,GAAR;QACI,EAAE,CAAC,CAAC,IAAI,CAAC,YAAY,IAAI,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC,CAAC,CAAC;YAC7C,IAAI,CAAC,UAAU,EAAE,CAAC;QACtB,CAAC;QAAC,IAAI,CAAC,CAAC;YACJ,IAAI,CAAC,UAAU,EAAE,CAAC;QACtB,CAAC;IACL,CAAC;IAED,0BAAU,GAAV,UAAW,QAAa;QAAb,wBAAa,GAAb,aAAa;QACpB,IAAI,IAAI,GAAG,IAAI,CAAC;QAChB,IAAI,CAAC,YAAY,CAAC,UAAU,CAAC,EAAC,IAAI,EAAE,QAAQ,EAAC,CAAC;aACzC,IAAI,CAAC,UAAC,IAAI;YACP,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;YACtB,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC;QAC7B,CAAC,CAAC,CAAC;IACX,CAAC;IAED,0BAAU,GAAV;QACI,IAAI,IAAI,GAAG,IAAI,CAAC;QAChB,IAAI,CAAC,YAAY,CAAC,UAAU,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;IACpD,CAAC;IAED,0BAAU,GAAV,UAAW,EAAE;QACT,IAAI,IAAI,GAAG,IAAI,CAAC;QAChB,IAAI,CAAC,YAAY,CAAC,UAAU,CAAC,EAAE,CAAC;aAC3B,IAAI,CAAC,UAAC,IAAI;YACP,CAAC,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,EAAE,UAAS,IAAI;gBAC9B,MAAM,CAAC,IAAI,CAAC,GAAG,KAAK,EAAE,CAAC;YAC3B,CAAC,CAAC,CAAC;YACH,IAAI,CAAC,YAAY,GAAG,EAAE,CAAC;QAC3B,CAAC,CAAC,CAAC;IACX,CAAC;IAnDL;QAAC,gBAAS,CAAC;YACP,QAAQ,EAAE,MAAM;YAChB,WAAW,EAAE,uCAAuC;YACpD,SAAS,EAAE,CAAE,oBAAY,CAAE;SAC9B,CAAC;;aAAA;IAgDF,YAAC;AAAD,CA9CA,AA8CC,IAAA;AA9CY,aAAK,QA8CjB,CAAA","file":"index.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { TasksService } from '../../../services/tasks';\nimport * as _ from 'lodash';\ndeclare var $: any;\n\n@Component({\n    selector: 'todo',\n    templateUrl: 'src/components/admin/tasks/index.html',\n    providers: [ TasksService ]\n})\n\nexport class Tasks implements OnInit {\n    tasks: any[];\n    taskSelected: any = {};\n    constructor(private tasksService: TasksService) {}\n\n    ngOnInit() {\n        this.getTasks();\n    }\n\n    getTasks() {\n        this.tasksService.getTasks()\n            .then((tasks) => { this.tasks = tasks; });\n    }\n\n    autoSave() {\n        if (this.taskSelected && this.taskSelected._id) {\n            this.updateTask();\n        } else {\n            this.createTask();\n        }\n    }\n\n    createTask(taskName = '') {\n        let self = this;\n        self.tasksService.createTask({name: taskName})\n            .then((task) => {\n                self.tasks.push(task);\n                self.taskSelected = task;\n            });\n    }\n\n    updateTask() {\n        let self = this;\n        self.tasksService.updateTask(self.taskSelected);\n    }\n\n    deleteTask(id) {\n        let self = this;\n        self.tasksService.deleteTask(id)\n            .then((task) => {\n                _.remove(self.tasks, function(task) {\n                    return task._id === id;\n                });\n                self.taskSelected = {};\n            });\n    }\n}\n"]}
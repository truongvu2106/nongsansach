{"version":3,"sources":["components/admin/gallery/index.ts"],"names":[],"mappings":";;;;;;;;;;AAAA,qBAAkC,eAAe,CAAC,CAAA;AAClD,sBAA6B,yBAAyB,CAAC,CAAA;AACvD,IAAY,CAAC,WAAM,QAAQ,CAAC,CAAA;AAO5B;IAGI,2BAAoB,YAA0B;QAA1B,iBAAY,GAAZ,YAAY,CAAc;QAF9C,WAAM,GAAG,EAAE,CAAC;QACZ,WAAM,GAAG,EAAE,CAAC;QAER,OAAO,CAAC,IAAI,CAAC,mDAAmD,CAAC,CAAC;IACtE,CAAC;IAED,oCAAQ,GAAR;QACI,IAAI,CAAC,SAAS,EAAE,CAAC;IACrB,CAAC;IAED,qCAAS,GAAT;QAAA,iBAGC;QAFG,IAAI,CAAC,YAAY,CAAC,YAAY,EAAE;aAC3B,IAAI,CAAC,UAAC,MAAM,IAAO,KAAI,CAAC,MAAM,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC;IACrD,CAAC;IAED,oCAAQ,GAAR,UAAS,QAAQ;QAAjB,iBAMC;QALG,IAAI,CAAC,YAAY,CAAC,WAAW,CAAC,EAAE,IAAI,EAAE,QAAQ,CAAC,KAAK,EAAE,CAAC;aAClD,IAAI,CAAC,UAAC,KAAK;YACR,KAAI,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;YACxB,QAAQ,CAAC,KAAK,GAAG,EAAE,CAAC;QACxB,CAAC,CAAC,CAAC;IACX,CAAC;IAED,uCAAW,GAAX,UAAY,EAAE;QAAd,iBAOC;QANG,IAAI,CAAC,YAAY,CAAC,WAAW,CAAC,EAAE,CAAC;aAC5B,IAAI,CAAC;YACF,CAAC,CAAC,MAAM,CAAC,KAAI,CAAC,MAAM,EAAE,UAAS,KAAK;gBAChC,MAAM,CAAC,KAAK,CAAC,GAAG,KAAK,EAAE,CAAC;YAC5B,CAAC,CAAC,CAAC;QACP,CAAC,CAAC,CAAC;IACX,CAAC;IArCL;QAAC,gBAAS,CAAC;YACT,QAAQ,EAAE,oBAAoB;YAC9B,WAAW,EAAE,yCAAyC;YACtD,SAAS,EAAE,CAAE,oBAAY,CAAE;SAC5B,CAAC;;yBAAA;IAkCF,wBAAC;AAAD,CAhCA,AAgCC,IAAA;AAhCY,yBAAiB,oBAgC7B,CAAA","file":"index.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { ImageService } from '../../../services/image';\nimport * as _ from 'lodash';\n@Component({\n  selector: 'gallery-management',\n  templateUrl: 'src/components/admin/gallery/index.html',\n  providers: [ ImageService ]\n})\n\nexport class GalleryManagement implements OnInit {\n    images = [];\n    albums = [];\n    constructor(private imageService: ImageService) {\n        console.info('Gallery Management Component Mounted Successfully');\n    }\n\n    ngOnInit() {\n        this.getImages();\n    }\n\n    getImages() {\n        this.imageService.getAllImages()\n            .then((images) => { this.images = images; });\n    }\n\n    addImage(imageUrl) {\n        this.imageService.createImage({ path: imageUrl.value })\n            .then((image) => {\n                this.images.push(image);\n                imageUrl.value = '';\n            });\n    }\n\n    deleteImage(id) {\n        this.imageService.deleteImage(id)\n            .then(() => {\n                _.remove(this.images, function(image) {\n                    return image._id === id;\n                });\n            });\n    }\n}\n"]}
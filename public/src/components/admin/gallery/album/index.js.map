{"version":3,"sources":["components/admin/gallery/album/index.ts"],"names":[],"mappings":"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","file":"index.js","sourcesContent":["import { Component, OnInit, OnDestroy, NgZone, EventEmitter } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { Config } from '../../../../config';\nimport { ImageService } from '../../../../services/image';\nimport { AuthService } from '../../../../services/auth';\n\n@Component({\n    selector: 'album-management',\n    templateUrl: 'src/components/admin/gallery/album/index.html',\n    providers: [ ImageService ]\n})\n\nexport class AlbumManagement implements OnInit {\n    album: any = {\n        title: '',\n        images: []\n    };\n    private config = Config;\n    private zone: NgZone;\n    private progress: number = 0;\n    private responses: any[] = [];\n    public options: Object;\n    public previewData: any[] = [];\n    public uploadEvents: EventEmitter<any> = new EventEmitter();\n\n    constructor(private authService: AuthService,\n        private imageService: ImageService, private router: Router) {}\n\n    ngOnInit() {\n        this.zone = new NgZone({ enableLongStackTrace: false });\n        this.options = {\n            url: this.config.apiURI + '/files',\n            maxUploads: 100,\n            calculateSpeed: true,\n            autoUpload: false,\n            previewUrl: true,\n            customHeaders: {\n                'x-access-token': this.authService.getAccessToken()\n            }\n        };\n    }\n\n    handleMultipleUpload(data: any): void {\n        let self = this;\n        let index = self.responses.findIndex(x => x.id === data.id);\n        if (index === -1) {\n            self.responses.push(data);\n        } else {\n            let total = 0;\n            let uploaded = 0;\n            let responsesLength = self.responses.length;\n            self.responses.forEach(resp => {\n                total += resp.progress.total;\n                uploaded += resp.progress.loaded;\n            });\n            let percent = 100 * uploaded / total;\n\n            self.zone.run(() => {\n                self.responses[index] = data;\n                self.progress = percent;\n                let response = JSON.parse(data.response);\n                if (response._id) {\n                    self.album.images.push(response._id);\n                }\n                if (responsesLength === self.album.images.length) {\n                    self.imageService.createAlbum(self.album)\n                        .then(function(album) {\n                            self.router.navigate(['/admin/gallery']);\n                        });\n                }\n            });\n        }\n    }\n\n    handlePreviewData(data: any): void {\n        this.previewData.push(data);\n    }\n\n    startUpload() {\n        if (this.album.title) {\n            this.uploadEvents.emit('startUpload');\n        }\n    }\n\n}\n"]}